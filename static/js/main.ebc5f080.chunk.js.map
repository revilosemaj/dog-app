{"version":3,"sources":["components/Body.jsx","components/Header.jsx","components/App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","height","width","FormRow","imgSrc","title","classes","useState","isLoaded","setLoaded","Fragment","Grid","item","xs","className","Paper","CircularProgress","style","marginTop","disableShrink","src","alt","display","onLoad","Body","props","dog","setDog","loading","setLoading","error","setError","breed","_","kebabCase","useEffect","status","fetch","then","res","json","data","message","Container","maxWidth","container","map","index","inputRoot","inputInput","paddingLeft","transition","transitions","create","borderBottom","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","HideOnScroll","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Header","input","setInput","setBreed","setStatus","CssBaseline","AppBar","Toolbar","Typography","variant","onSubmit","e","preventDefault","InputBase","placeholder","inputProps","onChange","event","value","Box","my","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebc5f080.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport _ from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        height: \"200px\",\r\n        width: \"100%\",\r\n      }\r\n}));\r\n\r\nconst FormRow = ({ imgSrc, title }) => {\r\n    const classes = useStyles();\r\n    const [isLoaded, setLoaded] = useState(false);\r\n    \r\n    \r\n      return (\r\n        <React.Fragment >\r\n          <Grid item xs={3} className={\"shadow-drop-2-center\"} >\r\n            <Paper className={classes.paper} >\r\n                {!isLoaded && <CircularProgress style={{marginTop: \"50px\"}} disableShrink />}\r\n                <img \r\n                    src={imgSrc} \r\n                    alt={title} \r\n                    width=\"100%\" \r\n                    height=\"100%\" \r\n                    style={!isLoaded ? { display: \"none\" } : { display: \"block\" }} \r\n                    onLoad={() => setLoaded(true)}/>\r\n            </Paper>\r\n          </Grid>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n\r\nconst Body = (props) => {\r\n        const classes = useStyles();\r\n        const [dog, setDog] = useState([]);\r\n        const [loading, setLoading] = useState(false);\r\n        const [error, setError] = useState(null);\r\n        const breed = _.kebabCase(props.breed);\r\n        \r\n        useEffect(() => { \r\n                if(!!props.status) {\r\n                    setError(null);\r\n                    setLoading(false);\r\n                    setDog([]);\r\n                    const fetchAPI = () => {\r\n                        const api_url = \"https://dog.ceo/api/breed/\" + breed + \"/images\";\r\n                        fetch(api_url)\r\n                            .then(res => res.json())\r\n                                .then((data) => {\r\n                                    setLoading(true);\r\n                                    if(data.status === \"success\") {\r\n                                        setDog([...data.message]);\r\n                                    } else {\r\n                                        setError(data);\r\n                                    }\r\n                                },\r\n                                (error) => {\r\n                                    setLoading(true);\r\n                                    setError(error);\r\n                                });\r\n                    };\r\n    \r\n                     fetchAPI(); \r\n                }\r\n                \r\n        }, [breed, props.status]);\r\n        \r\n       if(error && !!props.status) {\r\n            return (\r\n                <Container maxWidth={false} style={{ textAlign: \"center\", marginTop: \"50px\"}}>\r\n                    <p>{error.message}</p>\r\n                </Container>\r\n            );\r\n       } else if(!loading && !!props.status) {\r\n            return (\r\n                        <Container maxWidth={false} style={{ textAlign: \"center\", marginTop: \"50px\"}}>\r\n                            <p>Please wait while fetching . . . </p>\r\n                        </Container>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className={classes.root}>\r\n                    <Grid container spacing={1} >\r\n                    <Grid container item spacing={2}>\r\n                        {props.status && dog.map((src, index) => <FormRow imgSrc={src} title={breed} key={index}/>)}\r\n                    </Grid>\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Body;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PetsIcon from '@material-ui/icons/Pets';\r\nimport Body from \"./Body\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      borderBottom: \"2px solid #333\",\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(5),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    }\r\n  }));\r\n\r\nconst HideOnScroll = (props) => {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [input, setInput] = useState(\"\");\r\n  const [breed, setBreed] = useState(false);\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const inputChange = event => {\r\n      const value = event.target.value;\r\n      setInput(value);\r\n  }\r\n\r\n  const formSubmit = (e) => {\r\n      setStatus(false);\r\n      setBreed(false);\r\n      setBreed(input);\r\n      setStatus(true);\r\n      e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar color=\"default\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\"><PetsIcon /> Dog Search</Typography>\r\n            <div className={classes.search}>\r\n              <form onSubmit={formSubmit}>\r\n                <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                placeholder=\"Enter breed...\"\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onChange={inputChange}\r\n                value={input}\r\n                />\r\n                </form>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n      <Container maxWidth={false}>\r\n        <Box my={2}>\r\n          <Body breed={breed} status={status}/>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Body from \"./Body\";\r\n// import Footer from \"./Footer\";\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n                < div > \r\n                  < Header />\r\n                  <Body />\r\n                </ div>\r\n      );\r\n    }\r\n\r\n    export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}